version: "3.8"

services:

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
      - loki_config:/etc/loki:ro
    networks:
      - logging
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 512M

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - promtail_config:/etc/promtail:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - logging
    deploy:
      mode: global
      resources:
        limits:
          memory: 256M

  grafana:
    image: grafana/grafana-oss:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD={GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - logging
      - network_swarm_public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.grafana.rule=Host(`{grafana_url_here}`)
        - traefik.http.routers.grafana.entrypoints=websecure
        - traefik.http.routers.grafana.tls.certresolver=letsencryptresolver
        - traefik.http.routers.grafana.priority=1
        - traefik.http.routers.grafana.service=grafana
        - traefik.http.services.grafana.loadbalancer.server.port=3000
        - traefik.http.services.grafana.loadbalancer.passHostHeader=true


      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 512M

volumes:
  loki_data:
    external: true
  grafana_data:
    external: true
  loki_config:
    external: true
  promtail_config:
    external: true

networks:
  logging:
    external: true
  network_swarm_public:
    external: true
